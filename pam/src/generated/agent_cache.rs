// @generated
// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CacheGetRequest {
    #[prost(message, optional, tag="1")]
    pub header: ::core::option::Option<super::agent::RequestHeader>,
    #[prost(string, repeated, tag="2")]
    pub keys: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CacheGetResponse {
    #[prost(message, optional, tag="1")]
    pub header: ::core::option::Option<super::agent::ResponseHeader>,
    #[prost(enumeration="CacheStatus", tag="2")]
    pub status: i32,
    #[prost(message, optional, tag="3")]
    pub expiry: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(string, tag="4")]
    pub value: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CacheSetRequest {
    #[prost(message, optional, tag="1")]
    pub header: ::core::option::Option<super::agent::RequestHeader>,
    #[prost(string, repeated, tag="2")]
    pub keys: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(message, optional, tag="3")]
    pub expiry: ::core::option::Option<::prost_types::Timestamp>,
    #[prost(string, tag="4")]
    pub value: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct CacheSetResponse {
    #[prost(message, optional, tag="1")]
    pub header: ::core::option::Option<super::agent::ResponseHeader>,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum CacheStatus {
    Valid = 0,
    NotFound = 1,
    Expired = 2,
}
impl CacheStatus {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Valid => "VALID",
            Self::NotFound => "NOT_FOUND",
            Self::Expired => "EXPIRED",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "VALID" => Some(Self::Valid),
            "NOT_FOUND" => Some(Self::NotFound),
            "EXPIRED" => Some(Self::Expired),
            _ => None,
        }
    }
}
include!("agent_cache.tonic.rs");
// @@protoc_insertion_point(module)
